{"version":3,"sources":["../../src/components/subscriber.js"],"names":["Configurable","require","Monitorable","Component","axon","colors","module","exports","Subscriber","constructor","advertisement","discoveryOptions","startDiscovery","sock","types","type","set","subscribesTo","forEach","topic","namespace","on","args","length","unshift","substr","listeners","logUnknownEvents","discovery","log","name","yellow","emit","onAdded","obj","address","useHostNames","hostName","alreadyConnected","socks","some","s","_host","remoteAddress","remotePort","port","connect","listener","formatTypeWithNamespace","oppo"],"mappings":"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","sourcesContent":["const Configurable = require('./configurable');\nconst Monitorable = require('./monitorable');\nconst Component = require('./component');\nconst axon = require('@dashersw/axon');\n\n// eslint-disable-next-line\nconst colors = require('colors');\n\nmodule.exports = class Subscriber extends Monitorable(Configurable(Component)) {\n    constructor(advertisement, discoveryOptions) {\n        super(advertisement, discoveryOptions);\n\n        this.startDiscovery();\n\n        this.sock = new axon.types[this.type]();\n        this.sock.sock.set('retry timeout', 0);\n\n        this.advertisement.subscribesTo = this.advertisement.subscribesTo || ['*'];\n\n        this.advertisement.subscribesTo.forEach((topic) => {\n            let namespace = '';\n            if (this.advertisement.namespace) {\n                namespace = this.advertisement.namespace + '::';\n            }\n\n            topic = 'message::' + namespace + topic;\n\n            ((topic) => {\n                this.sock.on(topic, (...args) => {\n                    if (args.length == 1) {\n                        args.unshift(topic.substr(9));\n                    } else {\n                        args[0] = namespace + args[0];\n                    }\n\n                    if (this.listeners(args[0]).length === 0 && this.discoveryOptions.logUnknownEvents) {\n                        this.discovery.log([this.advertisement.name, '>',\n                            `No listeners found for event: ${args[0]}`.yellow]);\n                    }\n\n                    this.emit(...args);\n                });\n            })(topic);\n        });\n    }\n\n    onAdded(obj) {\n        super.onAdded(obj);\n\n        const address = this.constructor.useHostNames ? obj.hostName : obj.address;\n\n        const alreadyConnected = this.sock.sock.socks.some((s) =>\n            (this.constructor.useHostNames ? s._host == obj.hostName : s.remoteAddress == address) &&\n            s.remotePort == obj.advertisement.port);\n\n        if (alreadyConnected) return;\n\n        this.sock.connect(obj.advertisement.port, address);\n    }\n\n    on(type, listener) {\n        return super.on(this.formatTypeWithNamespace(type), listener);\n    }\n\n    formatTypeWithNamespace(type) {\n        let namespace = '';\n        if (this.advertisement.namespace) {\n            namespace = this.advertisement.namespace + '::';\n        }\n\n        return namespace + type;\n    }\n\n    get type() {\n        return 'sub-emitter';\n    }\n\n    get oppo() {\n        return 'pub-emitter';\n    }\n};\n"],"file":"subscriber.js"}